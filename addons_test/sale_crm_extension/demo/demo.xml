<odoo>
    <data>
<!--
          <record id="object0" model="sale_crm_extension.sale_crm_extension">
            <field name="name">Object 0</field>
            <field name="value">0</field>
          </record>

          <record id="object1" model="sale_crm_extension.sale_crm_extension">
            <field name="name">Object 1</field>
            <field name="value">10</field>
          </record>

          <record id="object2" model="sale_crm_extension.sale_crm_extension">
            <field name="name">Object 2</field>
            <field name="value">20</field>
          </record>

          <record id="object3" model="sale_crm_extension.sale_crm_extension">
            <field name="name">Object 3</field>
            <field name="value">30</field>
          </record>

          <record id="object4" model="sale_crm_extension.sale_crm_extension">
            <field name="name">Object 4</field>
            <field name="value">40</field>
          </record>
-->


            # @api.onchange('partner_id')
    # def onchange_partner_id(self):
    #     print  ('Bonjour')
    #     return True


        """
        Load order event change partner
        :return:
        """
        # for r in self:
        #     if r.partner_id:
        #         order_ids = self.env['sale.order'].search([('partner_id', '=', r.partner_id.id), ('state','=','sale')])
                #print('bon de commandes %s ' % order_ids)

                #raise ValidationError(order_ids)
                amount_total = 0
                expense_total = 0
                order_list = []
                order_lines = []

                # if order_ids :
                #     for order in order_ids :
                #         order = {
                #             'partner_id': order.partner_id.id,
                #             'amount_total': order.amount_total,
                #             'date_order': order.date_order,
                #             'name': order.name,
                #             'evaluation_id': order.evaluation_id.id,
                #             'id': order.id,
                #         }
                #         order_lines += [order]

                #         order_list.append(order.id)
                #         amount_total += order.amount_untaxed
                #         if len(order.expense_ids) > 0:
                #             for expense in order.expense_ids:
                #                 expense_total += expense.amount
                #
                # print("order_list", order_list)
                # print("amount_total", amount_total)
                # print("expense_total", expense_total)
                #
                # r.income_realised = amount_total
                # r.margin = r.income_realised - expense_total

                #r.order_ids = order_lines

        #return {'domain': {'partner_id': [('id', 'in', order_list)]}}




    </data>
</odoo>
